buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.github.fvarrui:javapackager:1.7.2'
    }
}
apply plugin: 'application'
apply plugin: 'io.github.fvarrui.javapackager.plugin'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.github.trilarion:java-vorbis-support:1.2.1'
    implementation 'com.thoughtworks.xstream:xstream:1.4.16'
    implementation 'org.beanshell:bsh:2.0b5'
}

application {
    mainClass.set('org.spicetrade.Game')
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.addAll(["-Xlint:unchecked", "-Xlint:deprecation"])
}

tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

jar {
    manifest {
        attributes (
            'Built-By': 'Taher Alkhateeb',
            'Main-Class': 'org.spicetrade.Game',
            'Implementation-Title': 'Spice Trade',
            'Implementation-Version': '2.0',
            'Implementation-Vendor': 'pythys.com',
            'Implementation-URL': 'https://www.pythys.com'
        )
    }
    from {
        configurations.runtimeClasspath.get().collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

javapackager {
    mainClass = application.mainClass.get()
    bundleJre = true
    generateInstaller = true
}

task copyProps(type: Copy) {
    from 'spicetrade.properties'
    into 'build/spicetrade'
}

task packageLinux(type: io.github.fvarrui.javapackager.gradle.PackageTask) {
    dependsOn build
    platform = 'linux'
    createTarball = true
    jrePath = file(System.properties['java.home'])
    finalizedBy copyProps
}
task packageMac(type: io.github.fvarrui.javapackager.gradle.PackageTask) {
    dependsOn build
    platform = 'mac'
    createTarball = true
    finalizedBy copyProps
}
task packageWindows(type: io.github.fvarrui.javapackager.gradle.PackageTask) {
    dependsOn build
    platform = 'windows'
    createZipball = true
    finalizedBy copyProps
}

task packageAll(dependsOn: [ packageLinux, packageMac, packageWindows ])
